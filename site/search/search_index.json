{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o de Webhook Introdu\u00e7\u00e3o Webhooks s\u00e3o chamadas HTTP enviadas automaticamente por um sistema para notificar outro sistema sobre eventos ocorridos. Esta documenta\u00e7\u00e3o explica como configurar e utilizar um webhook. Como Funciona Um evento ocorre no sistema emissor. O sistema emissor envia uma requisi\u00e7\u00e3o HTTP POST para a URL do webhook. O sistema receptor processa os dados recebidos e executa uma a\u00e7\u00e3o correspondente. Configura\u00e7\u00e3o do Webhook 1. Criando um Endpoint para Receber o Webhook O endpoint deve ser capaz de receber requisi\u00e7\u00f5es HTTP POST com dados no formato JSON. Exemplo em Python (Flask): from flask import Flask, request, jsonify app = Flask(__name__) @app.route('/webhook', methods=['POST']) def webhook(): data = request.json print(\"Recebido webhook:\", data) return jsonify({\"message\": \"Webhook recebido com sucesso!\"}), 200 if __name__ == '__main__': app.run(port=5000) 2. Configurando o Webhook no Sistema Emissor No sistema emissor, registre a URL do webhook ( http://seu-servidor.com/webhook ) e escolha quais eventos deseja monitorar. 3. Estrutura da Requisi\u00e7\u00e3o A requisi\u00e7\u00e3o HTTP POST enviada pelo sistema emissor geralmente tem este formato: POST /webhook HTTP/1.1 Host: seu-servidor.com Content-Type: application/json { \"evento\": \"usuario_registrado\", \"dados\": { \"id\": 123, \"nome\": \"Jo\u00e3o Silva\", \"email\": \"joao@example.com\" } } Tratamento e Seguran\u00e7a Valide os dados recebidos para evitar ataques. Use autentica\u00e7\u00e3o com um token secreto para garantir que os webhooks sejam de uma fonte confi\u00e1vel. Responda rapidamente (dentro de 5 segundos) para evitar falhas no webhook. Testando o Webhook Use o curl para testar o webhook manualmente: curl -X POST http://localhost:5000/webhook \\ -H \"Content-Type: application/json\" \\ -d '{\"evento\": \"teste\", \"dados\": {\"mensagem\": \"Hello Webhook\"}}' Conclus\u00e3o Agora voc\u00ea sabe como configurar e utilizar um webhook para receber notifica\u00e7\u00f5es autom\u00e1ticas entre sistemas!!!!!!","title":"Documenta\u00e7\u00e3o de Webhook"},{"location":"#documentacao-de-webhook","text":"","title":"Documenta\u00e7\u00e3o de Webhook"},{"location":"#introducao","text":"Webhooks s\u00e3o chamadas HTTP enviadas automaticamente por um sistema para notificar outro sistema sobre eventos ocorridos. Esta documenta\u00e7\u00e3o explica como configurar e utilizar um webhook.","title":"Introdu\u00e7\u00e3o"},{"location":"#como-funciona","text":"Um evento ocorre no sistema emissor. O sistema emissor envia uma requisi\u00e7\u00e3o HTTP POST para a URL do webhook. O sistema receptor processa os dados recebidos e executa uma a\u00e7\u00e3o correspondente.","title":"Como Funciona"},{"location":"#configuracao-do-webhook","text":"","title":"Configura\u00e7\u00e3o do Webhook"},{"location":"#1-criando-um-endpoint-para-receber-o-webhook","text":"O endpoint deve ser capaz de receber requisi\u00e7\u00f5es HTTP POST com dados no formato JSON. Exemplo em Python (Flask): from flask import Flask, request, jsonify app = Flask(__name__) @app.route('/webhook', methods=['POST']) def webhook(): data = request.json print(\"Recebido webhook:\", data) return jsonify({\"message\": \"Webhook recebido com sucesso!\"}), 200 if __name__ == '__main__': app.run(port=5000)","title":"1. Criando um Endpoint para Receber o Webhook"},{"location":"#2-configurando-o-webhook-no-sistema-emissor","text":"No sistema emissor, registre a URL do webhook ( http://seu-servidor.com/webhook ) e escolha quais eventos deseja monitorar.","title":"2. Configurando o Webhook no Sistema Emissor"},{"location":"#3-estrutura-da-requisicao","text":"A requisi\u00e7\u00e3o HTTP POST enviada pelo sistema emissor geralmente tem este formato: POST /webhook HTTP/1.1 Host: seu-servidor.com Content-Type: application/json { \"evento\": \"usuario_registrado\", \"dados\": { \"id\": 123, \"nome\": \"Jo\u00e3o Silva\", \"email\": \"joao@example.com\" } }","title":"3. Estrutura da Requisi\u00e7\u00e3o"},{"location":"#tratamento-e-seguranca","text":"Valide os dados recebidos para evitar ataques. Use autentica\u00e7\u00e3o com um token secreto para garantir que os webhooks sejam de uma fonte confi\u00e1vel. Responda rapidamente (dentro de 5 segundos) para evitar falhas no webhook.","title":"Tratamento e Seguran\u00e7a"},{"location":"#testando-o-webhook","text":"Use o curl para testar o webhook manualmente: curl -X POST http://localhost:5000/webhook \\ -H \"Content-Type: application/json\" \\ -d '{\"evento\": \"teste\", \"dados\": {\"mensagem\": \"Hello Webhook\"}}'","title":"Testando o Webhook"},{"location":"#conclusao","text":"Agora voc\u00ea sabe como configurar e utilizar um webhook para receber notifica\u00e7\u00f5es autom\u00e1ticas entre sistemas!!!!!!","title":"Conclus\u00e3o"}]}